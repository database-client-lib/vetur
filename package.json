{
  "name": "vetur-plus",
  "displayName": "Vetur Plus",
  "description": "Vue tooling for VS Code",
  "icon": "asset/vue.png",
  "version": "1.0.0",
  "publisher": "cweijan",
  "scripts": {
    "watch": "rollup -c rollup.config.js -w",
    "compile": "rollup -c rollup.config.js",
    "build:grammar": "ts-node --project scripts/tsconfig.json scripts/build_grammar",
    "prepare-publish": "./build/release-cleanup.sh"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/database-client-lib/vetur"
  },
  "keywords": [
    "vetur",
    "Vue",
    "vue",
    "vuejs"
  ],
  "categories": [
    "Programming Languages"
  ],
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": false
    }
  },
  "engines": {
    "vscode": "^1.52.0"
  },
  "activationEvents": [
    "onLanguage:vue"
  ],
  "main": "./dist/vueMain.js",
  "contributes": {
    "commands": [
      {
        "command": "vetur.restartVLS",
        "category": "Vetur",
        "title": "Restart VLS (Vue Language Server)"
      },
      {
        "command": "vetur.generateGrammar",
        "category": "Vetur",
        "title": "Generate grammar from `vetur.grammar.customBlocks`"
      },
      {
        "command": "vetur.showCorrespondingVirtualFile",
        "category": "Vetur",
        "title": "Show corresponding virtual file and sourcemap"
      },
      {
        "command": "vetur.openUserScaffoldSnippetFolder",
        "category": "Vetur",
        "title": "Open user scaffold snippet folder"
      },
      {
        "command": "vetur.showOutputChannel",
        "category": "Vetur",
        "title": "Show Output Channel"
      },
      {
        "command": "vetur.showDoctorInfo",
        "category": "Vetur",
        "title": "Show Doctor info"
      }
    ],
    "breakpoints": [
      {
        "language": "vue"
      }
    ],
    "languages": [
      {
        "id": "vue",
        "aliases": [
          "Vue",
          "vue"
        ],
        "extensions": [
          ".vue"
        ],
        "configuration": "./languages/vue-language-configuration.json"
      },
      {
        "id": "vue-html",
        "aliases": [
          "Vue-html"
        ],
        "configuration": "./languages/vue-html-language-configuration.json"
      },
      {
        "id": "vue-postcss",
        "aliases": [
          "Vue-PostCSS",
          "Vue-POSTCSS",
          "vue-postcss"
        ],
        "configuration": "./languages/vue-postcss-language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "vue",
        "scopeName": "source.vue",
        "path": "./syntaxes/vue-generated.json",
        "embeddedLanguages": {
          "text.html.basic": "html",
          "text.html.vue-html": "vue-html",
          "text.jade.slm": "slm",
          "text.haml": "haml",
          "text.slim": "slim",
          "text.html.liquid": "liquid",
          "source.css": "css",
          "source.css.scss": "scss",
          "source.css.less": "less",
          "source.css.postcss": "vue-postcss",
          "source.sass": "sass",
          "source.stylus": "stylus",
          "source.js": "javascript",
          "source.ts": "typescript",
          "source.coffee": "coffeescript",
          "text.html.markdown": "md",
          "source.yaml": "yaml",
          "source.json": "json",
          "source.php": "php",
          "source.graphql": "graphql"
        }
      },
      {
        "language": "vue-postcss",
        "scopeName": "source.css.postcss",
        "path": "./syntaxes/vue-postcss.json"
      },
      {
        "language": "vue-html",
        "scopeName": "text.html.vue-html",
        "path": "./syntaxes/vue-html.tmLanguage.json",
        "embeddedLanguages": {
          "source.js": "javascript"
        }
      },
      {
        "scopeName": "markdown.vue.codeblock",
        "path": "./syntaxes/markdown-vue.json",
        "injectTo": [
          "text.html.markdown"
        ],
        "embeddedLanguages": {
          "meta.embedded.block.vue": "vue"
        }
      }
    ],
    "configuration": {
      "title": "Vetur",
      "properties": {
        "vetur.ignoreProjectWarning": {
          "type": "boolean",
          "default": false,
          "description": "Vetur will warn about not setup correctly for the project. You can disable it.",
          "scope": "application"
        },
        "vetur.useWorkspaceDependencies": {
          "type": "boolean",
          "default": false,
          "description": "Use dependencies from workspace. Support for TypeScript.",
          "scope": "application"
        },
        "vetur.completion.autoImport": {
          "type": "boolean",
          "default": true,
          "description": "Include completion for module export and auto import them"
        },
        "vetur.completion.scaffoldSnippetSources": {
          "type": "object",
          "default": {
            "workspace": "üíº",
            "user": "üóíÔ∏è",
            "vetur": "‚úå"
          },
          "properties": {
            "workspace": {
              "type": "string",
              "default": "üíº",
              "description": "Show Scaffold Snippets from `<WORKSPACE>/.vscode/vetur/snippets`."
            },
            "user": {
              "type": "string",
              "default": "üóíÔ∏è",
              "description": "Show Scaffold Snippets from `<USER-DATA-DIR>/User/snippets/vetur`."
            },
            "vetur": {
              "type": "string",
              "default": "‚úå",
              "description": "Show Scaffold Snippets bundled in Vetur."
            }
          },
          "description": "Where Vetur source Scaffold Snippets from and how to indicate them. Set a source to \"\" to disable it.\n\n- workspace: `<WORKSPACE>/.vscode/vetur/snippets`.\n- user: `<USER-DATA-DIR>/User/snippets/vetur`.\n- vetur: Bundled in Vetur.\n\nThe default is:\n```\n\"vetur.completion.scaffoldSnippetSources\": {\n  \"workspace\": \"üíº\",\n  \"user\": \"üóíÔ∏è\",\n  \"vetur\": \"‚úå\"\n}\n```\n\nAlternatively, you can do:\n\n```\n\"vetur.completion.scaffoldSnippetSources\": {\n  \"workspace\": \"(W)\",\n  \"user\": \"(U)\",\n  \"vetur\": \"(V)\"\n}\n```\n\nRead more: https://vuejs.github.io/vetur/snippet.html."
        },
        "vetur.completion.tagCasing": {
          "type": "string",
          "default": "kebab",
          "enum": [
            "initial",
            "kebab"
          ],
          "enumDescriptions": [
            "use the key in `components: {...}` as is for tag completion and do not force any casing",
            "kebab-case completion for <my-tag>"
          ],
          "description": "Casing conversion for tag completion"
        },
        "vetur.grammar.customBlocks": {
          "type": "object",
          "default": {
            "docs": "md",
            "i18n": "json"
          },
          "description": "Mapping from custom block tag name to language name. Used for generating grammar to support syntax highlighting for custom blocks."
        },
        "vetur.validation.template": {
          "type": "boolean",
          "default": true,
          "description": "Validate vue-html in <template> using eslint-plugin-vue"
        },
        "vetur.validation.templateProps": {
          "type": "boolean",
          "default": false,
          "description": "Validate props usage in <template> region. Show error/warning for not passing declared props to child components and show error for passing wrongly typed interpolation expressions"
        },
        "vetur.validation.interpolation": {
          "type": "boolean",
          "default": true,
          "description": "Validate interpolations in <template> region using TypeScript language service"
        },
        "vetur.validation.style": {
          "type": "boolean",
          "default": true,
          "description": "Validate css/scss/less/postcss in <style>"
        },
        "vetur.validation.script": {
          "type": "boolean",
          "default": true,
          "description": "Validate js/ts in <script>"
        },
        "vetur.format.enable": {
          "type": "boolean",
          "default": true,
          "description": "Enable/disable the Vetur document formatter."
        },
        "vetur.format.options.tabSize": {
          "type": "number",
          "default": 2,
          "description": "Number of spaces per indentation level. Inherited by all formatters."
        },
        "vetur.format.options.useTabs": {
          "type": "boolean",
          "default": false,
          "description": "Use tabs for indentation. Inherited by all formatters."
        },
        "vetur.format.defaultFormatter.sass": {
          "type": "string",
          "default": "sass-formatter",
          "enum": [
            "none",
            "sass-formatter"
          ],
          "enumDescriptions": [
            "disable formatting",
            "sass formatter"
          ],
          "description": "Default formatter for <style lang='sass'> region"
        },
        "vetur.format.styleInitialIndent": {
          "type": "boolean",
          "default": false,
          "description": "Whether to have initial indent for <style> region"
        },
        "vetur.format.scriptInitialIndent": {
          "type": "boolean",
          "default": false,
          "description": "Whether to have initial indent for <script> region"
        },
        "vetur.languageFeatures.codeActions": {
          "type": "boolean",
          "default": true,
          "description": "Whether to enable codeActions"
        },
        "vetur.languageFeatures.updateImportOnFileMove": {
          "type": "boolean",
          "default": true,
          "description": "Whether to automatic updating import path when rename or move a file"
        },
        "vetur.languageFeatures.semanticTokens": {
          "type": "boolean",
          "default": true,
          "description": "Whether to enable semantic highlighting. Currently only works for typescript"
        },
        "vetur.trace.server": {
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VS Code and Vue Language Server."
        },
        "vetur.dev.vlsPath": {
          "type": "string",
          "description": "Path to vls for Vetur developers. There are two ways of using it. \n\n1. Clone vuejs/vetur from GitHub, build it and point it to the ABSOLUTE path of `/server`.\n2. `yarn global add vls` and point Vetur to the installed location (`yarn global dir` + node_modules/vls)",
          "scope": "machine"
        },
        "vetur.dev.vlsPort": {
          "type": "number",
          "description": "The port that VLS listens to. Can be used for attaching to the VLS Node process for debugging / profiling.",
          "default": -1
        },
        "vetur.dev.logLevel": {
          "type": "string",
          "description": "Log level for VLS",
          "default": "INFO",
          "enum": [
            "INFO",
            "DEBUG"
          ],
          "enumDescriptions": [
            "Only log info messages. This is the default.",
            "Log info and debug messages."
          ]
        },
        "vetur.experimental.templateInterpolationService": {
          "type": "boolean",
          "default": false,
          "description": "Enable template interpolation service that offers hover / definition / references in Vue interpolations."
        },
        "vetur.underline.refValue": {
          "type": "boolean",
          "default": true,
          "description": "Enable underline `.value` when using composition API."
        }
      }
    },
    "semanticTokenScopes": [
      {
        "scopes": {
          "property.refValue": [
            "entity.name.function"
          ]
        }
      }
    ]
  },
  "devDependencies": {
    "@rollup/plugin-commonjs": "^24.0.1",
    "@rollup/plugin-json": "^6.0.0",
    "@rollup/plugin-node-resolve": "^15.0.1",
    "@types/glob": "^8.0.1",
    "@types/js-yaml": "^4.0.4",
    "@types/lodash": "^4.14.176",
    "@types/minimist": "^1.2.2",
    "@types/mocha": "^10.0.1",
    "@types/node": "^18.14.0",
    "@types/shelljs": "^0.8.9",
    "@types/vscode": "^1.52.0",
    "@vscode/test-electron": "2.2.3",
    "esbuild": "^0.17.8",
    "fs-extra": "^11.1.0",
    "glob": "^8.1.0",
    "husky": "^8.0.3",
    "js-yaml": "^4.1.0",
    "lint-staged": "^13.1.2",
    "minimist": "^1.2.8",
    "mocha": "^10.2.0",
    "npm-run-all": "^4.1.5",
    "rollup": "^3.17.0",
    "rollup-plugin-delete": "^2.0.0",
    "rollup-plugin-dts": "^5.2.0",
    "rollup-plugin-terser": "^7.0.2",
    "rollup-plugin-typescript2": "^0.34.1",
    "shelljs": "^0.8.5",
    "ts-node": "^10.4.0",
    "typescript": "^4.9.5",
    "vscode-languageclient": "^7.0.0",
    "vscode-languageserver-types": "^3.16.0"
  }
}
